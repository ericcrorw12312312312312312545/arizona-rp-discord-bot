const { Intents, Client, MessageEmbed, Collection, MessageActionRow, MessageButton, MessageSelectMenu } = require("discord.js");
const LogsTemp = require("../schemas/LogsTemp");
const logs = require('../config').logs

function endsWithAny(suffixes, string) {
	return suffixes.some((suffix) => string.endsWith(suffix));
}

function time(s) {
    let ms = s % 1000;
    s = (s - ms) / 1000;
    let secs = s % 60;
    s = (s - secs) / 60;
    let mins = s % 60;
    s = (s - mins) / 60;
    let hrs = s % 24;
    s = (s - hrs) / 24;
    let days = s;
    let status = true;
    let output = "";

    if (days != 0) {
        if (days.toString().endsWith("1") && !days.toString().endsWith("11")) {
            output += `${days} –¥–µ–Ω—å`;
        } else if (
            endsWithAny(["2", "3", "4"], days.toString()) &&
            !endsWithAny(["12", "13", "14"], days.toString())
        ) {
            output += `${days} –¥–Ω—è`;
        } else {
            output += `${days} –¥–Ω–µ–π`;
        }
        status = false;
    }
    if (hrs != 0) {
        if (status) {
            if (hrs.toString().endsWith("1") && !hrs.toString().endsWith("11")) {
                output += `${hrs} —á–∞—Å`;
            } else if (
                endsWithAny(["2", "3", "4"], hrs.toString()) &&
                !endsWithAny(["12", "13", "14"], hrs.toString())
            ) {
                output += `${hrs} —á–∞—Å–∞`;
            } else {
                output += `${hrs} —á–∞—Å–æ–≤`;
            }
            status = false;
        }
    }
    if (mins != 0) {
        if (status) {
            if (mins.toString().endsWith("1") && !mins.toString().endsWith("11")) {
                output += `${mins} –º–∏–Ω—É—Ç—É`;
            } else if (
                endsWithAny(["2", "3", "4"], mins.toString()) &&
                !endsWithAny(["12", "13", "14"], mins.toString())
            ) {
                output += `${mins} –º–∏–Ω—É—Ç—ã`;
            } else {
                output += `${mins} –º–∏–Ω—É—Ç`;
            }
            status = false;
        }
    }
    if (secs != 0) {
        if (status) {
            if (secs.toString().endsWith("1") && !secs.toString().endsWith("11")) {
                output += `${secs} —Å–µ–∫—É–Ω–¥—É`;
            } else if (
                endsWithAny(["2", "3", "4"], secs.toString()) &&
                !endsWithAny(["12", "13", "14"], secs.toString())
            ) {
                output += `${secs} —Å–µ–∫—É–Ω–¥—ã`;
            } else {
                output += `${secs} —Å–µ–∫—É–Ω–¥`;
            }
            status = false;
        }
    }
    if (ms != 0) {
        if (status) {
            output += `${ms} ms`;
        }
    }
    return output;
}

module.exports = async (bot, interaction) => {
    const message_interaction = interaction.message
    const guild_interaction = bot.guilds.cache.get(interaction.guildId); // –ò—â–µ–º –≥–∏–ª—å–¥–∏—é –≤ –∫–æ—Ç–æ—Ä–æ–π –±—ã–ª–æ —Å–æ–≤–µ—Ä—à–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ
    const member_interaction = await guild_interaction.members.fetch(interaction.user.id); // –Æ–∑–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É
    const channel_interaction = await guild_interaction.channels.cache.get(interaction.channelId); // –ö–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ

    if(!member_interaction.roles.cache.some(r => logs.some(role => r.id == role))){
        const err = new MessageEmbed()
        .setTitle("–û—à–∏–±–∫–∞")
        .setColor(16505678)
        .setDescription("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!");
        return interaction.reply({ embeds: [err], ephemeral: true });
    }

    const logs_db = await LogsTemp.findOne({ mod_msg: interaction.message.id })
    if(!logs_db){
        let err = new MessageEmbed()
        .setTitle('–û—à–∏–±–∫–∞')
        .setColor(16240198)
        .setDescription(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!`)
        return interaction.reply({ embeds: [err], ephemeral: true })
    }
    let fetched = await interaction.guild.members.fetch(logs_db.DiscordID)
    let embed = new MessageEmbed()
      .setTitle("–ó–∞—è–≤–∫–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞")
      .setColor(16505678)
      .setTimestamp()
      .setFooter({text:`SAMP: –ñ–∏–∑–Ω—å –≤ –î–µ—Ä–µ–≤–Ω–µüê¶`, iconURL: 'https://images-ext-1.discordapp.net/external/MCoBJT-9LUuQP1JRCr6R5NoMbhoqlA_iNBLhthJXePw/https/cdn.discordapp.com/icons/527799726557364237/65fd35e326f6a59383b3d64050afc7c4.png'})
      .setDescription(`**–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:** <@${logs_db.DiscordID}>\n**–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:** <t:${~~(logs_db.created_at/1000)}:F>\n**–°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:** ${fetched.roles.highest}\n**–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:**\n\`\`\`cpp\n${logs_db.content}\`\`\`\n**–ù–∞–π–¥–µ–Ω –Ω–∏–∫:**\n[${logs_db.nick} (1 —Å–µ—Ä–≤–µ—Ä)](http://ulog.union-u.net/search.php?searchtext=${logs_db.nick}&server=16)\n[${logs_db.nick} (2 —Å–µ—Ä–≤–µ—Ä)](http://ulog.union-u.net/search.php?searchtext=${logs_db.nick}&server=17)\n\n**–ó–∞—è–∫—É —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª:**${interaction.member}\n**–í—Ä–µ–º—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è**: \`${time(Date.now()-logs_db.created_at)}\``);
    await message_interaction.edit({ embeds: [embed], components: [] })

    await LogsTemp.deleteOne({ mod_msg: interaction.message.id })
// })
}
